plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'pet'
version = '0.0.1-SNAPSHOT'

ext {
	libraryVersions = [:]
}

libraryVersions.lombok = '1.18.32'
libraryVersions.modelmapper = '3.2.0'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

	compileOnly "org.projectlombok:lombok:${libraryVersions.lombok}"
	annotationProcessor "org.projectlombok:lombok:${libraryVersions.lombok}"
	implementation "org.modelmapper:modelmapper:${libraryVersions.modelmapper}"

	implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.12.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.awaitility:awaitility'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

jacocoTestReport {
	reports {
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
