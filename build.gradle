plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'pet'
version = '0.0.1-SNAPSHOT'

ext {
	libraryVersions = [:]
}

libraryVersions.lombok = '1.18.32'
libraryVersions.modelmapper = '3.2.0'
libraryVersions.openApi = '2.4.0'
libraryVersions.mongo = '4.12.2'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${libraryVersions.openApi}"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation "org.modelmapper:modelmapper:${libraryVersions.modelmapper}"
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'

	compileOnly "org.projectlombok:lombok:${libraryVersions.lombok}"
	annotationProcessor "org.projectlombok:lombok:${libraryVersions.lombok}"
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	implementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:${libraryVersions.mongo}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.awaitility:awaitility'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

jacocoTestReport {
	reports {
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
